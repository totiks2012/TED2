# block.tcl - –ü–ª–∞–≥–∏–Ω –¥–ª—è –±–ª–æ—á–Ω–æ–π –∑–∞–º–µ–Ω—ã —Ç–µ–∫—Å—Ç–∞
# Created: 2025-05-05 17:35:22 by totiks2012
# Updated: 2025-05-20 07:22:30 by totiks2012 - —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –±–ª–æ—á–Ω–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è, –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–æ–≥–æ –±–ª–æ–∫–∞
# Updated: 2025-05-20 16:50:00 by totiks2012 - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ –¥–≤–æ–π–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–∞ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞ –≤ –¥–∏–∞–ª–æ–≥–µ

namespace eval ::plugin::block {
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Ä—è–¥–æ–∫ –∫–Ω–æ–ø–∫–∏ - —á–µ—Ç–≤–µ—Ä—Ç–∞—è –ø–æ—Å–ª–µ –±–∞–∑–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
    variable button_order 4
    
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–ª–∞–≥–∏–Ω–∞
    variable replace_all 0    ;# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ–ø—Ü–∏–∏ "–ó–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ"
    
    # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    variable initialized 0
    
    # –û–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞
    variable plugin_info
    array set plugin_info {
        name "Block"
        version "1.2.4"
        description "–ü–ª–∞–≥–∏–Ω –¥–ª—è –±–ª–æ—á–Ω–æ–π –∑–∞–º–µ–Ω—ã —Ç–µ–∫—Å—Ç–∞"
        author "totiks2012"
    }
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞
    proc init {} {
        variable button_order
        variable initialized
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ –ø–ª–∞–≥–∏–Ω —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
        if {$initialized} {
            return 1
        }
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –≤ –ø–∞–Ω–µ–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        set block_button [::core::register_plugin_button "block" "üß± Block" ::plugin::block::show_complex_replace_dialog "" $button_order]
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
        bind . <Control-Shift-F> { ::plugin::block::show_complex_replace_dialog }
        bind . <Control-Shift-f> { ::plugin::block::show_complex_replace_dialog }
        
        # –û—Ç–º–µ—á–∞–µ–º –ø–ª–∞–≥–∏–Ω –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
        set initialized 1
        
        return 1
    }
    
    # –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ –æ—Ç–º–µ–Ω—ã
    proc register_undo {widget operation text pos {end_pos ""}} {
        if {[info commands ::plugin::hotkeys::push_char] ne ""} {
            ::plugin::hotkeys::push_char $widget $operation $text $pos $end_pos
        }
    }
    
    # –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø–æ–∫–∞–∑–∞ –¥–∏–∞–ª–æ–≥–∞ –±–ª–æ—á–Ω–æ–π –∑–∞–º–µ–Ω—ã
    proc show_complex_replace_dialog {} {
        variable replace_all

        # –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        set w .complex_replace_dialog
        catch {destroy $w}
        toplevel $w
        wm title $w "–ë–ª–æ—á–Ω–∞—è –∑–∞–º–µ–Ω–∞"
        wm transient $w .
        wm resizable $w 1 1

        # –°–æ–∑–¥–∞–µ–º –∏ —Ä–∞–∑–º–µ—â–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        ttk::frame $w.f -padding "10 10 10 10"
        pack $w.f -expand 1 -fill both

        # –ü–æ–ª–µ –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–π –º–µ—Ç–∫–∏
        ttk::labelframe $w.f.start -text "–ù–∞—á–∞–ª—å–Ω–∞—è –º–µ—Ç–∫–∞:"
        pack $w.f.start -fill x -pady 2
        entry $w.f.start.entry -width 40
        pack $w.f.start.entry -fill x -padx 5 -pady 2
        
        # –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø—Ä–∏–≤—è–∑–∫–∏ –¥–ª—è Ctrl+A –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è/–≤—Å—Ç–∞–≤–∫–∏ –¥–ª—è –ø–æ–ª–µ–π entry
        bind $w.f.start.entry <Control-a> {%W selection range 0 end; break}
        bind $w.f.start.entry <Control-A> {%W selection range 0 end; break}
        
        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è/–≤—Å—Ç–∞–≤–∫–∏ –¥–ª—è –ø–æ–ª–µ–π entry
        bind $w.f.start.entry <Control-c> {event generate %W <<Copy>>; break}
        bind $w.f.start.entry <Control-v> {event generate %W <<Paste>>; break}
        bind $w.f.start.entry <Control-x> {event generate %W <<Cut>>; break}

        # –ü–æ–ª–µ –¥–ª—è –∫–æ–Ω–µ—á–Ω–æ–π –º–µ—Ç–∫–∏
        ttk::labelframe $w.f.end -text "–ö–æ–Ω–µ—á–Ω–∞—è –º–µ—Ç–∫–∞:"
        pack $w.f.end -fill x -pady 2
        entry $w.f.end.entry -width 40
        pack $w.f.end.entry -fill x -padx 5 -pady 2
        
        # –ü—Ä–∏–≤—è–∑–∫–∏ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—è entry
        bind $w.f.end.entry <Control-a> {%W selection range 0 end; break}
        bind $w.f.end.entry <Control-A> {%W selection range 0 end; break}
        bind $w.f.end.entry <Control-c> {event generate %W <<Copy>>; break}
        bind $w.f.end.entry <Control-v> {event generate %W <<Paste>>; break}
        bind $w.f.end.entry <Control-x> {event generate %W <<Cut>>; break}

        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ–¥–∞
        ttk::labelframe $w.f.newcode -text "–ù–æ–≤—ã–π –∫–æ–¥:"
        pack $w.f.newcode -fill both -expand 1 -pady 2
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–æ–ª–ª–±–∞—Ä—ã –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
        text $w.f.newcode.text -width 60 -height 15 -wrap none \
            -xscrollcommand "$w.f.newcode.xscroll set" \
            -yscrollcommand "$w.f.newcode.yscroll set"
        ttk::scrollbar $w.f.newcode.yscroll -orient vertical -command "$w.f.newcode.text yview"
        ttk::scrollbar $w.f.newcode.xscroll -orient horizontal -command "$w.f.newcode.text xview"
        
        # –†–∞–∑–º–µ—â–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –∏ —Å–∫—Ä–æ–ª–ª–±–∞—Ä—ã
        grid $w.f.newcode.text -row 0 -column 0 -sticky nsew
        grid $w.f.newcode.yscroll -row 0 -column 1 -sticky ns
        grid $w.f.newcode.xscroll -row 1 -column 0 -sticky ew
        grid columnconfigure $w.f.newcode 0 -weight 1
        grid rowconfigure $w.f.newcode 0 -weight 1
        
        # –ü—Ä–∏–≤—è–∑–∫–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
        bind $w.f.newcode.text <Control-a> {%W tag add sel 1.0 end; break}
        bind $w.f.newcode.text <Control-A> {%W tag add sel 1.0 end; break}
        bind $w.f.newcode.text <Control-c> {event generate %W <<Copy>>; break}
        bind $w.f.newcode.text <Control-v> {event generate %W <<Paste>>; break}
        bind $w.f.newcode.text <Control-x> {event generate %W <<Cut>>; break}

        # –ö–Ω–æ–ø–∫–∏
        ttk::frame $w.f.buttons
        pack $w.f.buttons -fill x -pady 5
        ttk::button $w.f.buttons.find -text "–ù–∞–π—Ç–∏" \
            -command "::plugin::block::find_complex_replace \[$w.f.start.entry get\] \[$w.f.end.entry get\]"
        ttk::button $w.f.buttons.replace -text "–ó–∞–º–µ–Ω–∏—Ç—å" \
            -command "::plugin::block::do_complex_replace \[$w.f.start.entry get\] \[$w.f.end.entry get\] \[$w.f.newcode.text get 1.0 end-1c\]"
        ttk::button $w.f.buttons.cancel -text "–ó–∞–∫—Ä—ã—Ç—å" \
            -command "destroy $w"
        ttk::checkbutton $w.f.buttons.all -text "–ó–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ" \
            -variable ::plugin::block::replace_all

        # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏
        grid $w.f.buttons.find $w.f.buttons.replace $w.f.buttons.cancel -padx 5 -pady 5 -sticky ew
        grid $w.f.buttons.all -row 0 -column 3 -padx 5 -pady 5 -sticky e
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫
        grid columnconfigure $w.f.buttons 0 -weight 1
        grid columnconfigure $w.f.buttons 1 -weight 1
        grid columnconfigure $w.f.buttons 2 -weight 1
        grid columnconfigure $w.f.buttons 3 -weight 0

        # –ü—Ä–∏–≤—è–∑–∫–∏ –∫–ª–∞–≤–∏—à –¥–ª—è –¥–∏–∞–ª–æ–≥–∞
        # –ò–∑–º–µ–Ω—è–µ–º –ø—Ä–∏–≤—è–∑–∫–∏ –∫–ª–∞–≤–∏—à, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
        bind $w <Return> {
            # –ù–∞—Ö–æ–¥–∏–º –≤–∏–¥–∂–µ—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Å–µ–π—á–∞—Å —Ñ–æ–∫—É—Å
            set focused [focus]
            # –ï—Å–ª–∏ —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª—è—Ö –≤–≤–æ–¥–∞, —Ç–æ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
            if {[string match "*entry" $focused]} {
                # –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, –ø–æ–∑–≤–æ–ª—è—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
                break
            } elseif {[string match "*text" $focused]} {
                # –ï—Å–ª–∏ —Ñ–æ–∫—É—Å –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –ø–æ–ª–µ, –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
                event generate $focused <<Paste-Text>> -data "\n"
                break
            } else {
                # –í –¥—Ä—É–≥–∏—Ö —Å–ª—É—á–∞—è—Ö –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
                ::plugin::block::find_complex_replace \
                    [.complex_replace_dialog.f.start.entry get] \
                    [.complex_replace_dialog.f.end.entry get]
            }
        }
        
        bind $w <Control-Return> {
            ::plugin::block::do_complex_replace \
                [.complex_replace_dialog.f.start.entry get] \
                [.complex_replace_dialog.f.end.entry get] \
                [.complex_replace_dialog.f.newcode.text get 1.0 end-1c]
        }
        
        bind $w <Escape> "destroy $w"

        # –û—á–∏—â–∞–µ–º —Ñ–ª–∞–≥ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –æ—Ç–∫–ª—é—á–∞–µ–º —Å–æ–±—ã—Ç–∏–µ <<Modified>>
        $w.f.newcode.text edit modified 0
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
        wm minsize $w 500 400
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ
        wm withdraw $w
        update idletasks
        set x [expr {([winfo screenwidth .] - [winfo reqwidth $w]) / 2}]
        set y [expr {([winfo screenheight .] - [winfo reqheight $w]) / 2}]
        wm geometry $w +$x+$y
        wm deiconify $w

        # –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –º–µ—Ç–∫–∏
        focus $w.f.start.entry

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
        apply_theme_to_dialog $w
    }
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã –∫ –¥–∏–∞–ª–æ–≥—É
    proc apply_theme_to_dialog {w} {
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
        if {[info exists ::core::config(theme)] && $::core::config(theme) eq "dark"} {
            set entry_bg "#2D2D2D"
            set entry_fg "#CCCACA"
            set insert_bg "#FFFFFF" ;# –°–≤–µ—Ç–ª—ã–π –∫—É—Ä—Å–æ—Ä
            set text_bg "#2D2D2D"
            set text_fg "#CCCACA"
        } else {
            set entry_bg "#FFFFFF"
            set entry_fg "#000000"
            set insert_bg "#000000" ;# –¢–µ–º–Ω—ã–π –∫—É—Ä—Å–æ—Ä
            set text_bg "#FFFFFF"
            set text_fg "#000000"
        }

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç–∞ –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º –¥–∏–∞–ª–æ–≥–∞
        $w.f.newcode.text configure \
            -background $text_bg \
            -foreground $text_fg \
            -insertbackground $insert_bg
        $w.f.start.entry configure \
            -background $entry_bg \
            -foreground $entry_fg \
            -insertbackground $insert_bg
        $w.f.end.entry configure \
            -background $entry_bg \
            -foreground $entry_fg \
            -insertbackground $insert_bg
    }

    # –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø–æ–∏—Å–∫–∞ –±–ª–æ–∫–∞ —Å—Ç—Ä–æ–∫ –º–µ–∂–¥—É –º–µ—Ç–∫–∞–º–∏
    proc find_complex_replace {start_marker end_marker} {
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–∫–ª–∞–¥–∫—É
        set current_tab [.tabs select]
        if {$current_tab eq ""} {
            tk_messageBox -icon warning -title "–ü–æ–∏—Å–∫" \
                -message "–ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç–æ–π –≤–∫–ª–∞–¥–∫–∏."
            return 0
        }

        set txt $current_tab.text
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—É—Å—Ç—ã–µ –ª–∏ –º–∞—Ä–∫–µ—Ä—ã
        if {$start_marker eq "" || $end_marker eq ""} {
            tk_messageBox -icon warning -title "–ü–æ–∏—Å–∫" \
                -message "–ù–∞—á–∞–ª—å–Ω–∞—è –∏ –∫–æ–Ω–µ—á–Ω–∞—è –º–µ—Ç–∫–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏."
            return 0
        }
        
        # –ù–∞—Ö–æ–¥–∏–º –Ω–∞—á–∞–ª—å–Ω—É—é –º–µ—Ç–∫—É
        set start_pos [$txt search -nocase -- $start_marker 1.0 end]
        if {$start_pos eq ""} {
            tk_messageBox -icon info -title "–ü–æ–∏—Å–∫" \
                -message "–ù–∞—á–∞–ª—å–Ω–∞—è –º–µ—Ç–∫–∞ \"$start_marker\" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
            return 0
        }

        # –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω–µ—Ü —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –º–µ—Ç–∫–∏, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–µ—ë
        set start_marker_end [$txt search -nocase -exact -forwards -- $start_marker $start_pos]
        set start_marker_end "$start_marker_end + [string length $start_marker] chars"
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –∫–æ–Ω—Ü–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –º–µ—Ç–∫–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ
        # –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –∑–∞—Ö–≤–∞—Ç–∏—Ç—å –≤–µ—Å—å –±–ª–æ–∫ –Ω–∞—á–∏–Ω–∞—è —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –º–µ—Ç–∫–∏
        set start_line [lindex [split $start_marker_end .] 0]
        set block_start "$start_line.0 lineend + 1c"
        
        if {[$txt compare $block_start >= end]} {
            tk_messageBox -icon info -title "–ü–æ–∏—Å–∫" \
                -message "–ù–µ—Ç —Å—Ç—Ä–æ–∫ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –º–µ—Ç–∫–∏."
            return 0
        }

        # –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω–µ—á–Ω—É—é –º–µ—Ç–∫—É, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –º–µ—Ç–∫–∏
        set end_marker_start [$txt search -nocase -- $end_marker $block_start end]
        if {$end_marker_start eq ""} {
            tk_messageBox -icon info -title "–ü–æ–∏—Å–∫" \
                -message "–ö–æ–Ω–µ—á–Ω–∞—è –º–µ—Ç–∫–∞ \"$end_marker\" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
            return 0
        }

        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –∫–æ–Ω–µ—á–Ω–æ–π –º–µ—Ç–∫–∏
        set end_line [lindex [split $end_marker_start .] 0]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ–∂–¥—É –º–µ—Ç–∫–∞–º–∏ –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∏
        if {$end_line <= $start_line + 1} {
            tk_messageBox -icon info -title "–ü–æ–∏—Å–∫" \
                -message "–ù–µ—Ç —Å—Ç—Ä–æ–∫ –º–µ–∂–¥—É –º–µ—Ç–∫–∞–º–∏."
            return 0
        }
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω–µ—á–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –¥–æ –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏ —Å –∫–æ–Ω–µ—á–Ω–æ–π –º–µ—Ç–∫–æ–π
        set block_end "$end_line.0"

        # –û—á–∏—â–∞–µ–º –ª—é–±—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è
        $txt tag remove sel 1.0 end
        
        # –í—ã–¥–µ–ª—è–µ–º –±–ª–æ–∫ –º–µ–∂–¥—É –º–µ—Ç–∫–∞–º–∏
        $txt tag add sel $block_start $block_end
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –≤ –Ω–∞—á–∞–ª–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è –∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∫ –Ω–µ–º—É
        $txt mark set insert $block_start
        $txt see $block_start
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏, —á—Ç–æ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ
        update idletasks
        
        # –§–æ–∫—É—Å–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏, —á—Ç–æ–±—ã –≤—ã–¥–µ–ª–µ–Ω–∏–µ –±—ã–ª–æ –≤–∏–¥–Ω–æ
        focus $txt
        
        # –ö–æ–ø–∏—Ä—É–µ–º –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–µ –Ω–æ–≤–æ–≥–æ –∫–æ–¥–∞ –¥–∏–∞–ª–æ–≥–∞
        # –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –µ–≥–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        set selected_text [$txt get sel.first sel.last]
        if {[winfo exists .complex_replace_dialog]} {
            .complex_replace_dialog.f.newcode.text delete 1.0 end
            .complex_replace_dialog.f.newcode.text insert 1.0 $selected_text
        }
        
        return 1
    }

    # –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–æ–∂–Ω–æ–π –∑–∞–º–µ–Ω—ã (–±–ª–æ–∫ —Å—Ç—Ä–æ–∫)
    proc do_complex_replace {start_marker end_marker new_code} {
        variable replace_all
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–∫–ª–∞–¥–∫—É
        set current_tab [.tabs select]
        if {$current_tab eq ""} {
            tk_messageBox -icon warning -title "–ó–∞–º–µ–Ω–∞" \
                -message "–ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç–æ–π –≤–∫–ª–∞–¥–∫–∏."
            return
        }

        set txt $current_tab.text
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤—ã–¥–µ–ª–µ–Ω–∏–µ
        if {[$txt tag ranges sel] eq ""} {
            # –ï—Å–ª–∏ –Ω–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–∑—ã–≤–∞–µ–º –ø–æ–∏—Å–∫
            if {![find_complex_replace $start_marker $end_marker]} {
                return
            }
        }

        # –¢–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –≤—ã–¥–µ–ª–µ–Ω–∏—è
        set start_pos [$txt index sel.first]
        set end_pos [$txt index sel.last]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if {$start_pos eq "" || $end_pos eq ""} {
            tk_messageBox -icon warning -title "–ó–∞–º–µ–Ω–∞" \
                -message "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –∑–∞–º–µ–Ω—ã."
            return
        }
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è Undo
        set original_text [$txt get $start_pos $end_pos]
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏–π
        register_undo $txt "delete" $original_text $start_pos $end_pos
        
        # –£–¥–∞–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        $txt delete $start_pos $end_pos
        
        # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–æ–¥ (–µ—Å–ª–∏ –æ–Ω –Ω–µ –ø—É—Å—Ç–æ–π)
        if {$new_code ne ""} {
            $txt insert $start_pos $new_code
            
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å—Ç–∞–≤–∫—É –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏–π
            register_undo $txt "insert" $new_code $start_pos
        }

        # –û—Ç–º–µ—á–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
        if {[info exists ::core::modified_tabs($current_tab)]} {
            set ::core::modified_tabs($current_tab) 1
            if {[info commands ::core::check_modified] ne ""} {
                ::core::check_modified $current_tab
            }
        }

        # –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ –æ–ø—Ü–∏—è "–ó–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ"
        if {$replace_all} {
            set count 1
            while {[find_complex_replace $start_marker $end_marker]} {
                if {[$txt tag ranges sel] eq ""} {
                    break
                }
                set start_pos [$txt index sel.first]
                set end_pos [$txt index sel.last]
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è Undo
                set original_text [$txt get $start_pos $end_pos]
                
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏–π
                register_undo $txt "delete" $original_text $start_pos $end_pos
                
                # –£–¥–∞–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ
                $txt delete $start_pos $end_pos
                
                # –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–æ–¥ (–µ—Å–ª–∏ –Ω–µ –ø—É—Å—Ç–æ–π)
                if {$new_code ne ""} {
                    $txt insert $start_pos $new_code
                    
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å—Ç–∞–≤–∫—É –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏–π
                    register_undo $txt "insert" $new_code $start_pos
                }
                
                incr count
            }
            tk_messageBox -icon info -title "–ó–∞–º–µ–Ω–∞" \
                -message "–ó–∞–º–µ–Ω–µ–Ω–æ –±–ª–æ–∫–æ–≤: $count"
        } else {
            # –ò—â–µ–º —Å–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
            after 100 [list ::plugin::block::find_complex_replace $start_marker $end_marker]
        }
    }
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞ - –≤—ã–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
::plugin::block::init

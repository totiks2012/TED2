#!/usr/bin/wish
encoding system utf-8

# Main-Core.tcl - –û—Å–Ω–æ–≤–Ω–æ–µ —è–¥—Ä–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–ª–∞–≥–∏–Ω–æ–≤
# –Ø–¥—Ä–æ Main-Core.tcl –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–¥ Tide.tcl –æ—Ç—Å—é–¥–∞ https://github.com/ALANVF/Tide
# License Non-Profit Open Software License 3.0 (NPOSL-3.0)
# Created: 2025-05-05 16:41:47 by totiks2012

package require Tk
package require ctext

# –ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º–µ–Ω –¥–ª—è —è–¥—Ä–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
namespace eval ::core {
    # –ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    variable config
    array set config {
        version "1.0.0"
        theme "light"
        font_family "Courier"
        font_size 12
    }
    
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
    variable tab_counter 0
    variable tab_files
    array set tab_files {}
    variable modified_tabs
    array set modified_tabs {}
    
    # –°–ø–∏—Å–∫–∏ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –ø–ª–∞–≥–∏–Ω–æ–≤
    variable open_files {}
    variable plugins {}
    variable plugin_buttons {}
    
    # API –¥–ª—è –ø–ª–∞–≥–∏–Ω–æ–≤
    variable plugin_api
    array set plugin_api {}
}

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
proc ::core::create_ui {} {
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
    wm title . "TED2+"
    wm minsize . 800 600
    
    # –°–æ–∑–¥–∞–µ–º —Ç—É–ª–±–∞—Ä
    ttk::frame .toolbar
    pack .toolbar -fill x
    
    # –§—Ä–µ–π–º –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    ttk::frame .toolbar.core
    pack .toolbar.core -side left -fill x
    
    # –§—Ä–µ–π–º –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤
    ttk::frame .toolbar.plugins
    pack .toolbar.plugins -side left -fill x -padx 5
    
    # –ö–Ω–æ–ø–∫–∏ —è–¥—Ä–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
    ttk::button .toolbar.core.new -text "üìÑ –ù–æ–≤—ã–π" -command ::core::create_tab
    ttk::button .toolbar.core.open -text "üìÇ –û—Ç–∫—Ä—ã—Ç—å" -command ::core::open_file
    ttk::button .toolbar.core.save -text "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å" -command ::core::save_current_file
    ttk::button .toolbar.core.save_as -text "üíø –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫" -command ::core::save_as_file
    
    pack .toolbar.core.new .toolbar.core.open \
         .toolbar.core.save .toolbar.core.save_as \
         -side left -padx 2
    
    # –°–æ–∑–¥–∞–µ–º notebook –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
    ttk::notebook .tabs -padding 2
    pack .tabs -expand 1 -fill both
    
    # –ü—Ä–∏–≤—è–∑–∫–∏ –∫–ª–∞–≤–∏—à –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
    bind . <Control-n> { ::core::create_tab }
    bind . <Control-o> { ::core::open_file }
    bind . <Control-s> { ::core::save_current_file }
    bind . <Control-S> { ::core::save_as_file }
    bind . <Control-w> { ::core::close_current_tab }
    
    # –ü—Ä–∏–≤—è–∑–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ –ø—Ä–∞–≤–æ–º—É –∫–ª–∏–∫—É
    bind .tabs <Button-3> {
        set tab [.tabs select]
        if {$tab ne ""} {
            ::core::close_current_tab
        }
    }
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
    wm protocol . WM_DELETE_WINDOW ::core::confirm_exit
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–∏
proc ::core::create_tab {{filename ""}} {
    variable config
    variable tab_counter
    variable tab_files
    variable modified_tabs
    
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –≤–∫–ª–∞–¥–∫–∏
    incr tab_counter
    while {[winfo exists .tabs.tab$tab_counter]} {
        incr tab_counter
    }
    set tab_name "tab$tab_counter"
    
    # –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è –≤–∫–ª–∞–¥–∫–∏
    set tab .tabs.$tab_name
    ttk::frame $tab
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–º—ã
    if {$config(theme) eq "dark"} {
        set bg_color "#2D2D2D"
        set fg_color "#CCCACA"
        set sel_bg "#0F6FBF"
        set sel_fg "#FFFFFF"
        set ins_bg "#FFFFFF"
    } else {
        set bg_color "#FFFFFF"
        set fg_color "#000000"
        set sel_bg "#0060C0"
        set sel_fg "#FFFFFF"
        set ins_bg "#000000"
    }
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç –∏ –ø–æ–ª–æ—Å—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    ctext $tab.text \
        -wrap none \
        -undo 1 \
        -font [list $config(font_family) $config(font_size)] \
        -foreground $fg_color \
        -background $bg_color \
        -insertbackground $ins_bg \
        -selectbackground $sel_bg \
        -selectforeground $sel_fg \
        -height 24 \
        -yscrollcommand [list $tab.yscroll set] \
        -xscrollcommand [list $tab.xscroll set]
        
    ttk::scrollbar $tab.yscroll \
        -orient vertical \
        -command [list $tab.text yview]
    ttk::scrollbar $tab.xscroll \
        -orient horizontal \
        -command [list $tab.text xview]
        
    # –†–∞–∑–º–µ—â–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å –ø–æ–º–æ—â—å—é grid
    grid $tab.text -row 0 -column 0 -sticky nsew
    grid $tab.yscroll -row 0 -column 1 -sticky ns
    grid $tab.xscroll -row 1 -column 0 -sticky ew
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–µ—Å–∞ —Å—Ç–æ–ª–±—Ü–æ–≤ –∏ —Å—Ç—Ä–æ–∫
    grid columnconfigure $tab 0 -weight 1
    grid rowconfigure $tab 0 -weight 1
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤–∫–ª–∞–¥–∫—É –≤ notebook
    if {$filename eq ""} {
        set tab_title "–ù–æ–≤—ã–π $tab_counter"
        .tabs add $tab -text $tab_title
    } else {
        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª, –ø—ã—Ç–∞–µ–º—Å—è –µ–≥–æ –æ—Ç–∫—Ä—ã—Ç—å
        if {[file exists $filename]} {
            if {[catch {
                set f [open $filename r]
                fconfigure $f -encoding utf-8
                set content [read $f]
                close $f
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                $tab.text delete 1.0 end
                $tab.text insert 1.0 $content
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤–∫–ª–∞–¥–∫–∏
                set tab_title [file tail $filename]
                .tabs add $tab -text $tab_title
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
                set tab_files($tab) [file normalize $filename]
                if {[lsearch -exact $::core::open_files $filename] == -1} {
                    lappend ::core::open_files $filename
                }
                
            } err]} {
                tk_messageBox -icon error -title "–û—à–∏–±–∫–∞" \
                    -message "–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞:\n$err"
                destroy $tab
                return ""
            }
        } else {
            tk_messageBox -icon error -title "–û—à–∏–±–∫–∞" \
                -message "–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:\n$filename"
            destroy $tab
            return ""
        }
    }
    
    # –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    after idle "$tab.text highlight 1.0 end"
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    $tab.text edit modified 0
    bind $tab.text <<Modified>> [list ::core::check_modified $tab]
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    set modified_tabs($tab) 0
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    .tabs select $tab
    focus $tab.text
    
    return $tab
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
proc ::core::check_modified {tab} {
    variable modified_tabs
    
    if {[winfo exists $tab] && [string match ".tabs.*" $tab]} {
        set txt $tab.text
        if {[winfo exists $txt] && [$txt edit modified]} {
            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤–∫–ª–∞–¥–∫–∏
            set title [.tabs tab $tab -text]
            set base_title [string trimright $title " ‚Ä¢"]
            
            if {![string match "*‚Ä¢" $title]} {
                .tabs tab $tab -text "$base_title ‚Ä¢"
            }
            set modified_tabs($tab) 1
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ modified
            $txt edit modified 0
        }
    }
}

# –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
proc ::core::clear_tab_modified {tab} {
    variable modified_tabs

    set modified_tabs($tab) 0
    
    set title [.tabs tab $tab -text]
    set base_title [string trimright $title " ‚Ä¢"]
    .tabs tab $tab -text $base_title
}

# –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
proc ::core::open_file {} {
    variable tab_files
    variable open_files
    
    set types {
        {"Tcl Scripts"     {.tcl}}
        {"Text Files"      {.txt}}
        {"Shell Scripts"   {.sh}}
        {"All Files"       *}
    }
    
    set filename [tk_getOpenFile -filetypes $types]
    if {$filename eq ""} {
        return
    }
    
    set norm_path [file normalize $filename]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–∫—Ä—ã—Ç –ª–∏ —É–∂–µ —Ñ–∞–π–ª
    foreach tab [.tabs tabs] {
        if {[info exists tab_files($tab)] && 
            [file normalize $tab_files($tab)] eq $norm_path} {
            .tabs select $tab
            return
        }
    }
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É
    ::core::create_tab $filename
}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
proc ::core::save_current_file {} {
    variable tab_files
    variable modified_tabs
    variable open_files
    
    set current_tab [.tabs select]
    if {$current_tab eq ""} {
        tk_messageBox -icon warning -title "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ" \
            -message "–ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç–æ–π –≤–∫–ª–∞–¥–∫–∏."
        return
    }
    
    # –ï—Å–ª–∏ —Ñ–∞–π–ª –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∑–∞–ø—É—Å–∫–∞–µ–º "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫"
    if {![info exists tab_files($current_tab)]} {
        ::core::save_as_file
        return
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    if {[catch {
        set f [open $tab_files($current_tab) w]
        fconfigure $f -encoding utf-8
        puts -nonewline $f [$current_tab.text get 1.0 end-1c]
        close $f
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        ::core::clear_tab_modified $current_tab
        
    } err]} {
        tk_messageBox -icon error -title "–û—à–∏–±–∫–∞" \
            -message "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞: $err"
    }
}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–∫
proc ::core::save_as_file {} {
    variable tab_files
    variable modified_tabs
    variable open_files
    
    set current_tab [.tabs select]
    if {$current_tab eq ""} {
        tk_messageBox -icon warning -title "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ" \
            -message "–ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç–æ–π –≤–∫–ª–∞–¥–∫–∏."
        return
    }
    
    set types {
        {"Tcl Scripts"     {.tcl}}
        {"Text Files"      {.txt}}
        {"Shell Scripts"   {.sh}}
        {"All Files"       *}
    }
    
    set filename [tk_getSaveFile -filetypes $types]
    if {$filename eq ""} {
        return
    }
    
    if {[catch {
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        set f [open $filename w]
        fconfigure $f -encoding utf-8
        puts -nonewline $f [$current_tab.text get 1.0 end-1c]
        close $f
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        set tab_files($current_tab) [file normalize $filename]
        if {[lsearch -exact $open_files $filename] == -1} {
            lappend open_files $filename
        }
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        ::core::clear_tab_modified $current_tab
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        .tabs tab $current_tab -text [file tail $filename]
        
    } err]} {
        tk_messageBox -icon error -title "–û—à–∏–±–∫–∞" \
            -message "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞: $err"
    }
}

# –ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–∏
proc ::core::close_current_tab {} {
    variable tab_files
    variable modified_tabs
    variable open_files
    
    set current_tab [.tabs select]
    if {$current_tab eq ""} return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if {[info exists modified_tabs($current_tab)] && 
        $modified_tabs($current_tab)} {
        set answer [tk_messageBox -icon question -type yesnocancel \
            -title "–ó–∞–∫—Ä—ã—Ç–∏–µ –≤–∫–ª–∞–¥–∫–∏" \
            -message "–í —Ñ–∞–π–ª–µ –µ—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å?"]
        
        switch -- $answer {
            yes {
                ::core::save_current_file
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                if {[info exists modified_tabs($current_tab)] && $modified_tabs($current_tab)} {
                    # –ï—Å–ª–∏ —Ñ–∞–π–ª –≤—Å—ë –µ—â—ë –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, –∑–Ω–∞—á–∏—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ
                    return
                }
            }
            cancel { return }
        }
    }
    
    # –£–¥–∞–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
    if {[info exists tab_files($current_tab)]} {
        set idx [lsearch -exact $open_files $tab_files($current_tab)]
        if {$idx != -1} {
            set open_files [lreplace $open_files $idx $idx]
        }
        unset tab_files($current_tab)
    }
    
    # –£–¥–∞–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if {[info exists modified_tabs($current_tab)]} {
        unset modified_tabs($current_tab)
    }
    
    # –£–¥–∞–ª—è–µ–º –≤–∫–ª–∞–¥–∫—É
    destroy $current_tab
    
    # –ï—Å–ª–∏ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –≤–∫–ª–∞–¥–æ–∫, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
    if {[llength [.tabs tabs]] == 0} {
        ::core::create_tab
    }
}

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
proc ::core::confirm_exit {} {
    variable modified_tabs
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
    set has_unsaved false
    foreach tab [.tabs tabs] {
        if {[info exists modified_tabs($tab)] && $modified_tabs($tab)} {
            set has_unsaved true
            break
        }
    }
    
    if {$has_unsaved} {
        set answer [tk_messageBox -icon question -type yesnocancel \
            -title "–ù–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è" \
            -message "–ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º?"]
        
        switch -- $answer {
            yes {
                set save_failed false
                foreach tab [.tabs tabs] {
                    if {[info exists modified_tabs($tab)] && $modified_tabs($tab)} {
                        .tabs select $tab
                        ::core::save_current_file
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è –ª–∏ —Ñ–∞–π–ª
                        if {[info exists modified_tabs($tab)] && $modified_tabs($tab)} {
                            set save_failed true
                            break
                        }
                    }
                }
                if {!$save_failed} {
                    exit
                }
            }
            no { exit }
            cancel { return }
        }
    } else {
        exit
    }
}

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è API –¥–ª—è –ø–ª–∞–≥–∏–Ω–æ–≤
proc ::core::register_plugin_api {} {
    variable plugin_api
    
    # API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
    set plugin_api(create_tab) ::core::create_tab
    set plugin_api(close_tab) ::core::close_current_tab
    set plugin_api(get_current_tab) {.tabs select}
    set plugin_api(get_current_text) {
        set tab [.tabs select]
        if {$tab ne ""} {return $tab.text} else {return ""}
    }
    
    # API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–º
    set plugin_api(get_text) {
        set tab [.tabs select]
        if {$tab ne ""} {
            return [$tab.text get 1.0 end-1c]
        } else {
            return ""
        }
    }
    set plugin_api(set_text) {
        set tab [.tabs select]
        if {$tab ne ""} {
            $tab.text delete 1.0 end
            $tab.text insert 1.0 $text
        }
    }
    
    # API –¥–ª—è —Ñ–∞–π–ª–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    set plugin_api(get_file_path) {
        set tab [.tabs select]
        if {$tab ne "" && [info exists ::core::tab_files($tab)]} {
            return $::core::tab_files($tab)
        } else {
            return ""
        }
    }
    
    # API –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
    set plugin_api(get_config) {
        set key [lindex $args 0]
        if {[info exists ::core::config($key)]} {
            return $::core::config($key)
        } else {
            return ""
        }
    }
    set plugin_api(set_config) {
        set key [lindex $args 0]
        set value [lindex $args 1]
        set ::core::config($key) $value
    }
    
    # API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏
    set plugin_api(register_button) ::core::register_plugin_button
}

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –ø–ª–∞–≥–∏–Ω–∞
proc ::core::register_plugin_button {plugin_name button_text command {icon ""} {button_order 100}} {
    variable plugin_buttons
    
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏
    set button_id [string map {" " "_"} $plugin_name]_[llength $plugin_buttons]
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
    ttk::button .toolbar.plugins.$button_id -text $button_text -command $command
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–æ–ø–∫–µ –≤–º–µ—Å—Ç–µ —Å –ø–æ—Ä—è–¥–∫–æ–º
    lappend plugin_buttons [list $button_id $plugin_name $button_text $command $button_order]
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É –∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º
    ::core::update_plugin_buttons_order
    
    return $button_id
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤
proc ::core::update_plugin_buttons_order {} {
    variable plugin_buttons
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é button_order (5-–π —ç–ª–µ–º–µ–Ω—Ç)
    set sorted_buttons [lsort -integer -index 4 $plugin_buttons]
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø–∞–Ω–µ–ª–∏
    foreach widget [pack slaves .toolbar.plugins] {
        pack forget $widget
    }
    
    # –£–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    foreach btn $sorted_buttons {
        set button_id [lindex $btn 0]
        if {[winfo exists .toolbar.plugins.$button_id]} {
            pack .toolbar.plugins.$button_id -side left -padx 2
        }
    }
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤
proc ::core::load_plugins {} {
    variable plugins
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É –ø–ª–∞–≥–∏–Ω–æ–≤
    set plugin_dir [file join [file dirname [info script]] "plugins"]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞
    if {![file exists $plugin_dir] || ![file isdirectory $plugin_dir]} {
        puts "–ö–∞—Ç–∞–ª–æ–≥ –ø–ª–∞–≥–∏–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: $plugin_dir"
        file mkdir $plugin_dir
        puts "–°–æ–∑–¥–∞–Ω –∫–∞—Ç–∞–ª–æ–≥ –ø–ª–∞–≥–∏–Ω–æ–≤: $plugin_dir"
        return
    }
    
    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–ª–∞–≥–∏–Ω—ã –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    set plugin_files [glob -nocomplain -directory $plugin_dir *.tcl]
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
    set sorted_plugin_files [lsort $plugin_files]
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞–∂–¥—ã–π .tcl —Ñ–∞–π–ª –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
    foreach plugin_file $sorted_plugin_files {
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–∞–≥–∏–Ω –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º —Ä–µ–∂–∏–º–µ
        if {[catch {
            set plugin_name [file rootname [file tail $plugin_file]]
            puts "–ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞–≥–∏–Ω–∞: $plugin_name"
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º–µ–Ω –¥–ª—è –ø–ª–∞–≥–∏–Ω–∞
            namespace eval ::plugin::$plugin_name {
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é button_order —Ä–∞–≤–Ω—ã–º 100
                variable button_order 100
            }
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–¥ –ø–ª–∞–≥–∏–Ω–∞
            source $plugin_file
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø–ª–∞–≥–∏–Ω–∞
            if {[info commands ::plugin::${plugin_name}::init] ne ""} {
                # –í—ã–∑—ã–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø–ª–∞–≥–∏–Ω–∞
                if {[catch {::plugin::${plugin_name}::init} err]} {
                    puts "–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–∞ $plugin_name: $err"
                } else {
                    lappend plugins $plugin_name
                }
            } else {
                puts "–ü–ª–∞–≥–∏–Ω $plugin_name –Ω–µ –∏–º–µ–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ init"
            }
        } err]} {
            puts "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞–≥–∏–Ω–∞ $plugin_file: $err"
        }
    }
    
    puts "–ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–ª–∞–≥–∏–Ω–æ–≤: [llength $plugins]"
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
proc ::core::init {} {
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    ::core::create_ui
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º API –¥–ª—è –ø–ª–∞–≥–∏–Ω–æ–≤
    ::core::register_plugin_api
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–∞–≥–∏–Ω—ã
    ::core::load_plugins
    
    # –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    ::core::create_tab
    
    puts "Modular Editor –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ."
    puts "–í–µ—Ä—Å–∏—è: $::core::config(version)"
}

# –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
::core::init
